/**
 */
package de.dfki.iui.basys.model.domain.provider;

import de.dfki.iui.basys.model.domain.util.DomainAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class DomainItemProviderAdapterFactory extends DomainAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public DomainItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.DynamicLineBalancingResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DynamicLineBalancingResultItemProvider dynamicLineBalancingResultItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.DynamicLineBalancingResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDynamicLineBalancingResultAdapter() {
		if (dynamicLineBalancingResultItemProvider == null) {
			dynamicLineBalancingResultItemProvider = new DynamicLineBalancingResultItemProvider(this);
		}

		return dynamicLineBalancingResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.Instruction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstructionItemProvider instructionItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.Instruction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstructionAdapter() {
		if (instructionItemProvider == null) {
			instructionItemProvider = new InstructionItemProvider(this);
		}

		return instructionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.Material} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaterialItemProvider materialItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.Material}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMaterialAdapter() {
		if (materialItemProvider == null) {
			materialItemProvider = new MaterialItemProvider(this);
		}

		return materialItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.Media} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MediaItemProvider mediaItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.Media}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMediaAdapter() {
		if (mediaItemProvider == null) {
			mediaItemProvider = new MediaItemProvider(this);
		}

		return mediaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.Audio} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AudioItemProvider audioItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.Audio}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAudioAdapter() {
		if (audioItemProvider == null) {
			audioItemProvider = new AudioItemProvider(this);
		}

		return audioItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.Video} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VideoItemProvider videoItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.Video}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVideoAdapter() {
		if (videoItemProvider == null) {
			videoItemProvider = new VideoItemProvider(this);
		}

		return videoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.Image} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImageItemProvider imageItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.Image}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImageAdapter() {
		if (imageItemProvider == null) {
			imageItemProvider = new ImageItemProvider(this);
		}

		return imageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.Order} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrderItemProvider orderItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.Order}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrderAdapter() {
		if (orderItemProvider == null) {
			orderItemProvider = new OrderItemProvider(this);
		}

		return orderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.OrderStatus} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrderStatusItemProvider orderStatusItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.OrderStatus}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrderStatusAdapter() {
		if (orderStatusItemProvider == null) {
			orderStatusItemProvider = new OrderStatusItemProvider(this);
		}

		return orderStatusItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.ProductGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductGroupItemProvider productGroupItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.ProductGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductGroupAdapter() {
		if (productGroupItemProvider == null) {
			productGroupItemProvider = new ProductGroupItemProvider(this);
		}

		return productGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.ProductVariant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductVariantItemProvider productVariantItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.ProductVariant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductVariantAdapter() {
		if (productVariantItemProvider == null) {
			productVariantItemProvider = new ProductVariantItemProvider(this);
		}

		return productVariantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.ProductInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductInstanceItemProvider productInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.ProductInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductInstanceAdapter() {
		if (productInstanceItemProvider == null) {
			productInstanceItemProvider = new ProductInstanceItemProvider(this);
		}

		return productInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.ProductInstanceStatus} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductInstanceStatusItemProvider productInstanceStatusItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.ProductInstanceStatus}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductInstanceStatusAdapter() {
		if (productInstanceStatusItemProvider == null) {
			productInstanceStatusItemProvider = new ProductInstanceStatusItemProvider(this);
		}

		return productInstanceStatusItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.ProductRecognition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductRecognitionItemProvider productRecognitionItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.ProductRecognition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductRecognitionAdapter() {
		if (productRecognitionItemProvider == null) {
			productRecognitionItemProvider = new ProductRecognitionItemProvider(this);
		}

		return productRecognitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.ResourceInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResourceInstanceItemProvider resourceInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.ResourceInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResourceInstanceAdapter() {
		if (resourceInstanceItemProvider == null) {
			resourceInstanceItemProvider = new ResourceInstanceItemProvider(this);
		}

		return resourceInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.Staff} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaffItemProvider staffItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.Staff}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaffAdapter() {
		if (staffItemProvider == null) {
			staffItemProvider = new StaffItemProvider(this);
		}

		return staffItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.StaffRecognition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaffRecognitionItemProvider staffRecognitionItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.StaffRecognition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaffRecognitionAdapter() {
		if (staffRecognitionItemProvider == null) {
			staffRecognitionItemProvider = new StaffRecognitionItemProvider(this);
		}

		return staffRecognitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.StaffSkills} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaffSkillsItemProvider staffSkillsItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.StaffSkills}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaffSkillsAdapter() {
		if (staffSkillsItemProvider == null) {
			staffSkillsItemProvider = new StaffSkillsItemProvider(this);
		}

		return staffSkillsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.StaffSkill} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaffSkillItemProvider staffSkillItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.StaffSkill}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaffSkillAdapter() {
		if (staffSkillItemProvider == null) {
			staffSkillItemProvider = new StaffSkillItemProvider(this);
		}

		return staffSkillItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.Workplan} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkplanItemProvider workplanItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.Workplan}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkplanAdapter() {
		if (workplanItemProvider == null) {
			workplanItemProvider = new WorkplanItemProvider(this);
		}

		return workplanItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.Workstep} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkstepItemProvider workstepItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.Workstep}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkstepAdapter() {
		if (workstepItemProvider == null) {
			workstepItemProvider = new WorkstepItemProvider(this);
		}

		return workstepItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.CapabilityRequirement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CapabilityRequirementItemProvider capabilityRequirementItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.CapabilityRequirement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCapabilityRequirementAdapter() {
		if (capabilityRequirementItemProvider == null) {
			capabilityRequirementItemProvider = new CapabilityRequirementItemProvider(this);
		}

		return capabilityRequirementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.BOM} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BOMItemProvider bomItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.BOM}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBOMAdapter() {
		if (bomItemProvider == null) {
			bomItemProvider = new BOMItemProvider(this);
		}

		return bomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.BOMEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BOMEntryItemProvider bomEntryItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.BOMEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBOMEntryAdapter() {
		if (bomEntryItemProvider == null) {
			bomEntryItemProvider = new BOMEntryItemProvider(this);
		}

		return bomEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.WorkstepInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkstepInstanceItemProvider workstepInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.WorkstepInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkstepInstanceAdapter() {
		if (workstepInstanceItemProvider == null) {
			workstepInstanceItemProvider = new WorkstepInstanceItemProvider(this);
		}

		return workstepInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.dfki.iui.basys.model.domain.TemperatureReading} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TemperatureReadingItemProvider temperatureReadingItemProvider;

	/**
	 * This creates an adapter for a {@link de.dfki.iui.basys.model.domain.TemperatureReading}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTemperatureReadingAdapter() {
		if (temperatureReadingItemProvider == null) {
			temperatureReadingItemProvider = new TemperatureReadingItemProvider(this);
		}

		return temperatureReadingItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (dynamicLineBalancingResultItemProvider != null) dynamicLineBalancingResultItemProvider.dispose();
		if (instructionItemProvider != null) instructionItemProvider.dispose();
		if (materialItemProvider != null) materialItemProvider.dispose();
		if (mediaItemProvider != null) mediaItemProvider.dispose();
		if (audioItemProvider != null) audioItemProvider.dispose();
		if (videoItemProvider != null) videoItemProvider.dispose();
		if (imageItemProvider != null) imageItemProvider.dispose();
		if (orderItemProvider != null) orderItemProvider.dispose();
		if (orderStatusItemProvider != null) orderStatusItemProvider.dispose();
		if (productGroupItemProvider != null) productGroupItemProvider.dispose();
		if (productVariantItemProvider != null) productVariantItemProvider.dispose();
		if (productInstanceItemProvider != null) productInstanceItemProvider.dispose();
		if (productInstanceStatusItemProvider != null) productInstanceStatusItemProvider.dispose();
		if (productRecognitionItemProvider != null) productRecognitionItemProvider.dispose();
		if (resourceInstanceItemProvider != null) resourceInstanceItemProvider.dispose();
		if (staffItemProvider != null) staffItemProvider.dispose();
		if (staffRecognitionItemProvider != null) staffRecognitionItemProvider.dispose();
		if (staffSkillsItemProvider != null) staffSkillsItemProvider.dispose();
		if (staffSkillItemProvider != null) staffSkillItemProvider.dispose();
		if (workplanItemProvider != null) workplanItemProvider.dispose();
		if (workstepItemProvider != null) workstepItemProvider.dispose();
		if (capabilityRequirementItemProvider != null) capabilityRequirementItemProvider.dispose();
		if (bomItemProvider != null) bomItemProvider.dispose();
		if (bomEntryItemProvider != null) bomEntryItemProvider.dispose();
		if (workstepInstanceItemProvider != null) workstepInstanceItemProvider.dispose();
		if (temperatureReadingItemProvider != null) temperatureReadingItemProvider.dispose();
	}

}
